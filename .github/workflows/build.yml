name: Build & Lint

on:
  push:
  pull_request:
  schedule:
    - cron: "0 4,11 * * *"

env:
  DART_VERSION: 2.7

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    container:
      image: google/dart:${{ env.DART_VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: pub get

      - name: Persist current state
        uses: actions/upload-artifact@v1
        with:
          name: source
          path: .

  test:
    name: Run tests
    needs: install
    runs-on: ubuntu-latest
    container:
      image: google/dart:${{ env.DART_VERSION }}
    steps:
      - name: Checkout source
        uses: actions/download-artifact@v2
        with:
          name: source

      - name: Install dependencies
        run: pub get

      - name: Run tests
        run: pub run test

  lint:
    name: Lint
    needs: install
    runs-on: ubuntu-latest
    container:
      image: google/dart:${{ env.DART_VERSION }}
    steps:
      - name: Checkout source
        uses: actions/download-artifact@v2
        with:
          name: source

      - name: Install dependencies
        run: pub get

      - name: Run linter
        run: dartanalyzer . > analyze_report.txt
        continue-on-error: true

      - name: Install ruby
        uses: actions/setup-ruby@v1
        if: github.event_name == 'pull_request'
        with:
          ruby-version: "2.6"
      - name: Install ruby gems
        run: |
          gem install bundler
          bundle install --without documentation
        if: github.event_name == 'pull_request'
      - name: Run danger on generated report
        uses: MeilCli/danger-action@v1
        if: github.event_name == 'pull_request'
        with:
          danger_file: Dangerfile
          danger_id: "danger-pr"
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.BOT_TOKEN }}

  run-example:
    name: Run example
    needs: install
    runs-on: ubuntu-latest
    container:
      image: google/dart:${{ env.DART_VERSION }}
    steps:
      - name: Checkout source
        uses: actions/download-artifact@v2
        with:
          name: source

      - name: Install dependencies
        run: pub get
        working-directory: example

      - name: Run example
        run: dart main.dart
        working-directory: example
